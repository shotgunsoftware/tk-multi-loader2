# Copyright (c) 2015 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

# Metadata defining the behavior and requirements for this app

# expected fields in the configuration file for this app
configuration:

    # UI customization
    menu_name:
        type: str
        default_value: "Load"
        description: Name to appear on the Flow Production Tracking menu.

    title_name:
        type: str
        default_value: "Loader"
        description: Name to appear on the title of the UI Dialog.

    use_legacy_published_file_type_filter:
        type: bool
        default_value: false
        description: Set to True to use the legacy Published File Type filtering component.
                     This will show the filter widget in the bottom-left corner, but will
                     hide the more extensive Filter menu (which includes filtering options for
                     Published File Types). The legacy Published File Type filter widget
                     cannot be used in combination with the Filter menu.

    # hooks
    actions_hook:
        type: hook
        default_value: "{self}/{engine_name}_actions.py"
        description: Hook which contains all methods for action management.

    filter_publishes_hook:
        type: hook
        default_value: "{self}/filter_publishes.py"
        description: Specify a hook that, if needed, can filter the raw list of publishes returned
                     from Flow Production Tracking for the current location.

    download_thumbnails:
        type: bool
        default_value: true
        description: Controls whether thumbnails should be downloaded from Flow Production Tracking
                     or not. We strongly recommend that thumbnails are downloaded since this greatly
                     enhances the user experience of the loader, however in some situations this may
                     be difficult due to bandwidth or infrastructural restrictions.

    action_mappings:
        type: dict
        description: Associates published file types with actions. The actions are all defined
                     inside the actions hook.
        default_value: {}
        default_value_tk-3dsmax:
            3dsmax Scene: [import, reference]
        default_value_tk-3dsmaxplus:
            3dsmax Scene: [import, reference]
        default_value_tk-houdini:
            Houdini Scene: [merge]
        default_value_tk-nuke:
            Rendered Image: [read_node]
            Nuke Script: [script_import]
        default_value_tk-maya:
            Maya Scene: [reference, import]
            Rendered Image: [texture_node]
            Photoshop Image: [texture_node]
            UDIM Image: [udim_texture_node]
        default_value_tk-motionbuilder:
            Motion Builder FBX: [import]
        default_value_tk-photoshop:
            Photoshop Image: [add_as_a_layer, open_file]
            Rendered Image: [add_as_a_layer, open_file]
        default_value_tk-mari:
            Alembic Cache: [geometry_import]
        default_value_tk-flame:
            Flame Batch File: [load_setup]
            Flame Quicktime: [load_clip]
            Flame Render: [load_clip]
            Photoshop Image: [load_clip]
            Rendered Image: [load_clip]
            Image: [load_clip]
            Movie: [load_clip]
            Texture: [load_clip]

    entity_mappings:
        type: dict
        description: Associates entity types with actions. The actions are all defined
                     inside the actions hook.
        default_value: {}
        default_value_tk-flame:
            Shot: [load_batch, create_batch]

    entities:
        default_value:
            - caption: Project
              type: Hierarchy
              root: "{context.project}"
              publish_filters: []

            - caption: My Tasks
              type: Query
              entity_type: Task
              publish_filters: []
              filters:
              - [task_assignees, is, "{context.user}"]
              - ["project", "is", "{context.project}"]
              hierarchy: [entity, content]

        type: list
        description: "This setting defines the different tabs that will show up on the left hand side.
                      Each tab represents a Flow Production Tracking query, grouped by some
                      Flow Production Tracking fields to form a tree. This setting is a list of dictionaries.
                      Each dictionary in the list defines one tab. Dictionaries with their *type* key set to
                      'Hierarchy' should have they following keys: *caption* specifies the name of the tab,
                      *root* specifies the path to the root of the project hierarchy to display.
                      Dictionaries with their *type* key set to 'Query' should have they following keys:
                      *caption* specifies the name of the tab, *entity_type* specifies the
                      Flow Production Tracking entity type to display. *filters* is a list of standard API
                      Flow Production Tracking filters. *hierarchy* is a list of Flow Production Tracking fields,
                      defining the grouping of the tree. Optionally, you can specify a *publish_filters* key,
                      containing Flow Production Tracking API filters to apply to the publishes listing as it is
                      being loaded in the main view."
        allows_empty: False
        values:
            type: dict

    publish_filters:
        type: list
        description: "List of additional Flow Production Tracking filters to apply to the publish listings.
                      These will be applied before any other filtering takes place and would allow you to
                      for example hide things with a certain status."
        values:
            type: shotgun_filter
        allows_empty: True
        default_value: []


# this app works in all engines - it does not contain
# any host application specific commands
supported_engines:

# the Shotgun fields that this app needs in order to operate correctly
requires_shotgun_fields:

# More verbose description of this item
display_name: "Loader"
description: "Locate published files and reference them into your scene."

# Required minimum versions for this item to run
requires_shotgun_version:
requires_core_version: "v0.19.1"
requires_engine_version:

# The documentation url for this item
documentation_url: "https://help.autodesk.com/view/SGDEV/ENU/?guid=SG_Supervisor_Artist_sa_integrations_sa_integrations_user_guide_html#the-loader"

# the frameworks required to run this app
frameworks:
    - {"name": "tk-framework-shotgunutils", "version": "v5.x.x", "minimum_version": "v5.8.6"}
    - {"name": "tk-framework-qtwidgets", "version": "v2.x.x", "minimum_version": "v2.10.6"}
